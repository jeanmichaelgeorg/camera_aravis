//#line 2 "/opt/ros/melodic/share/dynamic_reconfigure/templates/ConfigType.h.template"
// *********************************************************
//
// File autogenerated for the camera_aravis package
// by the dynamic_reconfigure package.
// Please do not edit.
//
// ********************************************************/

#ifndef __camera_aravis__CAMERAARAVISCONFIG_H__
#define __camera_aravis__CAMERAARAVISCONFIG_H__

#if __cplusplus >= 201103L
#define DYNAMIC_RECONFIGURE_FINAL final
#else
#define DYNAMIC_RECONFIGURE_FINAL
#endif

#include <dynamic_reconfigure/config_tools.h>
#include <limits>
#include <ros/node_handle.h>
#include <dynamic_reconfigure/ConfigDescription.h>
#include <dynamic_reconfigure/ParamDescription.h>
#include <dynamic_reconfigure/Group.h>
#include <dynamic_reconfigure/config_init_mutex.h>
#include <boost/any.hpp>

namespace camera_aravis
{
  class CameraAravisConfigStatics;

  class CameraAravisConfig
  {
  public:
    class AbstractParamDescription : public dynamic_reconfigure::ParamDescription
    {
    public:
      AbstractParamDescription(std::string n, std::string t, uint32_t l,
          std::string d, std::string e)
      {
        name = n;
        type = t;
        level = l;
        description = d;
        edit_method = e;
      }

      virtual void clamp(CameraAravisConfig &config, const CameraAravisConfig &max, const CameraAravisConfig &min) const = 0;
      virtual void calcLevel(uint32_t &level, const CameraAravisConfig &config1, const CameraAravisConfig &config2) const = 0;
      virtual void fromServer(const ros::NodeHandle &nh, CameraAravisConfig &config) const = 0;
      virtual void toServer(const ros::NodeHandle &nh, const CameraAravisConfig &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, CameraAravisConfig &config) const = 0;
      virtual void toMessage(dynamic_reconfigure::Config &msg, const CameraAravisConfig &config) const = 0;
      virtual void getValue(const CameraAravisConfig &config, boost::any &val) const = 0;
    };

    typedef boost::shared_ptr<AbstractParamDescription> AbstractParamDescriptionPtr;
    typedef boost::shared_ptr<const AbstractParamDescription> AbstractParamDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template <class T>
    class ParamDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractParamDescription
    {
    public:
      ParamDescription(std::string a_name, std::string a_type, uint32_t a_level,
          std::string a_description, std::string a_edit_method, T CameraAravisConfig::* a_f) :
        AbstractParamDescription(a_name, a_type, a_level, a_description, a_edit_method),
        field(a_f)
      {}

      T CameraAravisConfig::* field;

      virtual void clamp(CameraAravisConfig &config, const CameraAravisConfig &max, const CameraAravisConfig &min) const
      {
        if (config.*field > max.*field)
          config.*field = max.*field;

        if (config.*field < min.*field)
          config.*field = min.*field;
      }

      virtual void calcLevel(uint32_t &comb_level, const CameraAravisConfig &config1, const CameraAravisConfig &config2) const
      {
        if (config1.*field != config2.*field)
          comb_level |= level;
      }

      virtual void fromServer(const ros::NodeHandle &nh, CameraAravisConfig &config) const
      {
        nh.getParam(name, config.*field);
      }

      virtual void toServer(const ros::NodeHandle &nh, const CameraAravisConfig &config) const
      {
        nh.setParam(name, config.*field);
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, CameraAravisConfig &config) const
      {
        return dynamic_reconfigure::ConfigTools::getParameter(msg, name, config.*field);
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const CameraAravisConfig &config) const
      {
        dynamic_reconfigure::ConfigTools::appendParameter(msg, name, config.*field);
      }

      virtual void getValue(const CameraAravisConfig &config, boost::any &val) const
      {
        val = config.*field;
      }
    };

    class AbstractGroupDescription : public dynamic_reconfigure::Group
    {
      public:
      AbstractGroupDescription(std::string n, std::string t, int p, int i, bool s)
      {
        name = n;
        type = t;
        parent = p;
        state = s;
        id = i;
      }

      std::vector<AbstractParamDescriptionConstPtr> abstract_parameters;
      bool state;

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &config) const =0;
      virtual void updateParams(boost::any &cfg, CameraAravisConfig &top) const= 0;
      virtual void setInitialState(boost::any &cfg) const = 0;


      void convertParams()
      {
        for(std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = abstract_parameters.begin(); i != abstract_parameters.end(); ++i)
        {
          parameters.push_back(dynamic_reconfigure::ParamDescription(**i));
        }
      }
    };

    typedef boost::shared_ptr<AbstractGroupDescription> AbstractGroupDescriptionPtr;
    typedef boost::shared_ptr<const AbstractGroupDescription> AbstractGroupDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template<class T, class PT>
    class GroupDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractGroupDescription
    {
    public:
      GroupDescription(std::string a_name, std::string a_type, int a_parent, int a_id, bool a_s, T PT::* a_f) : AbstractGroupDescription(a_name, a_type, a_parent, a_id, a_s), field(a_f)
      {
      }

      GroupDescription(const GroupDescription<T, PT>& g): AbstractGroupDescription(g.name, g.type, g.parent, g.id, g.state), field(g.field), groups(g.groups)
      {
        parameters = g.parameters;
        abstract_parameters = g.abstract_parameters;
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        if(!dynamic_reconfigure::ConfigTools::getGroupState(msg, name, (*config).*field))
          return false;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          if(!(*i)->fromMessage(msg, n))
            return false;
        }

        return true;
      }

      virtual void setInitialState(boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        T* group = &((*config).*field);
        group->state = state;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = boost::any(&((*config).*field));
          (*i)->setInitialState(n);
        }

      }

      virtual void updateParams(boost::any &cfg, CameraAravisConfig &top) const
      {
        PT* config = boost::any_cast<PT*>(cfg);

        T* f = &((*config).*field);
        f->setParams(top, abstract_parameters);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          (*i)->updateParams(n, top);
        }
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &cfg) const
      {
        const PT config = boost::any_cast<PT>(cfg);
        dynamic_reconfigure::ConfigTools::appendGroup<T>(msg, name, id, parent, config.*field);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          (*i)->toMessage(msg, config.*field);
        }
      }

      T PT::* field;
      std::vector<CameraAravisConfig::AbstractGroupDescriptionConstPtr> groups;
    };

class DEFAULT
{
  public:
    DEFAULT()
    {
      state = true;
      name = "Default";
    }

    void setParams(CameraAravisConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("Acquire"==(*_i)->name){Acquire = boost::any_cast<bool>(val);}
        if("ExposureAuto"==(*_i)->name){ExposureAuto = boost::any_cast<std::string>(val);}
        if("GainAuto"==(*_i)->name){GainAuto = boost::any_cast<std::string>(val);}
        if("ExposureTimeAbs"==(*_i)->name){ExposureTimeAbs = boost::any_cast<double>(val);}
        if("Gain"==(*_i)->name){Gain = boost::any_cast<double>(val);}
        if("AcquisitionMode"==(*_i)->name){AcquisitionMode = boost::any_cast<std::string>(val);}
        if("AcquisitionFrameRate"==(*_i)->name){AcquisitionFrameRate = boost::any_cast<double>(val);}
        if("TriggerMode"==(*_i)->name){TriggerMode = boost::any_cast<std::string>(val);}
        if("TriggerSource"==(*_i)->name){TriggerSource = boost::any_cast<std::string>(val);}
        if("softwaretriggerrate"==(*_i)->name){softwaretriggerrate = boost::any_cast<double>(val);}
        if("FocusPos"==(*_i)->name){FocusPos = boost::any_cast<int>(val);}
        if("frame_id"==(*_i)->name){frame_id = boost::any_cast<std::string>(val);}
        if("mtu"==(*_i)->name){mtu = boost::any_cast<int>(val);}
      }
    }

    bool Acquire;
std::string ExposureAuto;
std::string GainAuto;
double ExposureTimeAbs;
double Gain;
std::string AcquisitionMode;
double AcquisitionFrameRate;
std::string TriggerMode;
std::string TriggerSource;
double softwaretriggerrate;
int FocusPos;
std::string frame_id;
int mtu;

    bool state;
    std::string name;

    
}groups;



//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      bool Acquire;
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      std::string ExposureAuto;
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      std::string GainAuto;
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      double ExposureTimeAbs;
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      double Gain;
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      std::string AcquisitionMode;
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      double AcquisitionFrameRate;
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      std::string TriggerMode;
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      std::string TriggerSource;
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      double softwaretriggerrate;
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      int FocusPos;
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      std::string frame_id;
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      int mtu;
//#line 228 "/opt/ros/melodic/share/dynamic_reconfigure/templates/ConfigType.h.template"

    bool __fromMessage__(dynamic_reconfigure::Config &msg)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();

      int count = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        if ((*i)->fromMessage(msg, *this))
          count++;

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i ++)
      {
        if ((*i)->id == 0)
        {
          boost::any n = boost::any(this);
          (*i)->updateParams(n, *this);
          (*i)->fromMessage(msg, n);
        }
      }

      if (count != dynamic_reconfigure::ConfigTools::size(msg))
      {
        ROS_ERROR("CameraAravisConfig::__fromMessage__ called with an unexpected parameter.");
        ROS_ERROR("Booleans:");
        for (unsigned int i = 0; i < msg.bools.size(); i++)
          ROS_ERROR("  %s", msg.bools[i].name.c_str());
        ROS_ERROR("Integers:");
        for (unsigned int i = 0; i < msg.ints.size(); i++)
          ROS_ERROR("  %s", msg.ints[i].name.c_str());
        ROS_ERROR("Doubles:");
        for (unsigned int i = 0; i < msg.doubles.size(); i++)
          ROS_ERROR("  %s", msg.doubles[i].name.c_str());
        ROS_ERROR("Strings:");
        for (unsigned int i = 0; i < msg.strs.size(); i++)
          ROS_ERROR("  %s", msg.strs[i].name.c_str());
        // @todo Check that there are no duplicates. Make this error more
        // explicit.
        return false;
      }
      return true;
    }

    // This version of __toMessage__ is used during initialization of
    // statics when __getParamDescriptions__ can't be called yet.
    void __toMessage__(dynamic_reconfigure::Config &msg, const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__, const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__) const
    {
      dynamic_reconfigure::ConfigTools::clear(msg);
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toMessage(msg, *this);

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        if((*i)->id == 0)
        {
          (*i)->toMessage(msg, *this);
        }
      }
    }

    void __toMessage__(dynamic_reconfigure::Config &msg) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      __toMessage__(msg, __param_descriptions__, __group_descriptions__);
    }

    void __toServer__(const ros::NodeHandle &nh) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toServer(nh, *this);
    }

    void __fromServer__(const ros::NodeHandle &nh)
    {
      static bool setup=false;

      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->fromServer(nh, *this);

      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++){
        if (!setup && (*i)->id == 0) {
          setup = true;
          boost::any n = boost::any(this);
          (*i)->setInitialState(n);
        }
      }
    }

    void __clamp__()
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const CameraAravisConfig &__max__ = __getMax__();
      const CameraAravisConfig &__min__ = __getMin__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->clamp(*this, __max__, __min__);
    }

    uint32_t __level__(const CameraAravisConfig &config) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      uint32_t level = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->calcLevel(level, config, *this);
      return level;
    }

    static const dynamic_reconfigure::ConfigDescription &__getDescriptionMessage__();
    static const CameraAravisConfig &__getDefault__();
    static const CameraAravisConfig &__getMax__();
    static const CameraAravisConfig &__getMin__();
    static const std::vector<AbstractParamDescriptionConstPtr> &__getParamDescriptions__();
    static const std::vector<AbstractGroupDescriptionConstPtr> &__getGroupDescriptions__();

  private:
    static const CameraAravisConfigStatics *__get_statics__();
  };

  template <> // Max and min are ignored for strings.
  inline void CameraAravisConfig::ParamDescription<std::string>::clamp(CameraAravisConfig &config, const CameraAravisConfig &max, const CameraAravisConfig &min) const
  {
    (void) config;
    (void) min;
    (void) max;
    return;
  }

  class CameraAravisConfigStatics
  {
    friend class CameraAravisConfig;

    CameraAravisConfigStatics()
    {
CameraAravisConfig::GroupDescription<CameraAravisConfig::DEFAULT, CameraAravisConfig> Default("Default", "", 0, 0, true, &CameraAravisConfig::groups);
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.Acquire = 0;
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.Acquire = 1;
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.Acquire = 1;
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(CameraAravisConfig::AbstractParamDescriptionConstPtr(new CameraAravisConfig::ParamDescription<bool>("Acquire", "bool", 0, "Acquire", "", &CameraAravisConfig::Acquire)));
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(CameraAravisConfig::AbstractParamDescriptionConstPtr(new CameraAravisConfig::ParamDescription<bool>("Acquire", "bool", 0, "Acquire", "", &CameraAravisConfig::Acquire)));
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.ExposureAuto = "";
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.ExposureAuto = "";
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.ExposureAuto = "Off";
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(CameraAravisConfig::AbstractParamDescriptionConstPtr(new CameraAravisConfig::ParamDescription<std::string>("ExposureAuto", "str", 0, "Automatic exposure", "{'enum_description': 'Automatic Settings', 'enum': [{'srcline': 14, 'description': 'Use Manual Settings', 'srcfile': '/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg', 'cconsttype': 'const char * const', 'value': 'Off', 'ctype': 'std::string', 'type': 'str', 'name': 'Off_'}, {'srcline': 15, 'description': 'Recalc Once', 'srcfile': '/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg', 'cconsttype': 'const char * const', 'value': 'Once', 'ctype': 'std::string', 'type': 'str', 'name': 'Once'}, {'srcline': 16, 'description': 'Recalc Continually', 'srcfile': '/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg', 'cconsttype': 'const char * const', 'value': 'Continuous', 'ctype': 'std::string', 'type': 'str', 'name': 'Continuous'}]}", &CameraAravisConfig::ExposureAuto)));
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(CameraAravisConfig::AbstractParamDescriptionConstPtr(new CameraAravisConfig::ParamDescription<std::string>("ExposureAuto", "str", 0, "Automatic exposure", "{'enum_description': 'Automatic Settings', 'enum': [{'srcline': 14, 'description': 'Use Manual Settings', 'srcfile': '/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg', 'cconsttype': 'const char * const', 'value': 'Off', 'ctype': 'std::string', 'type': 'str', 'name': 'Off_'}, {'srcline': 15, 'description': 'Recalc Once', 'srcfile': '/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg', 'cconsttype': 'const char * const', 'value': 'Once', 'ctype': 'std::string', 'type': 'str', 'name': 'Once'}, {'srcline': 16, 'description': 'Recalc Continually', 'srcfile': '/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg', 'cconsttype': 'const char * const', 'value': 'Continuous', 'ctype': 'std::string', 'type': 'str', 'name': 'Continuous'}]}", &CameraAravisConfig::ExposureAuto)));
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.GainAuto = "";
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.GainAuto = "";
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.GainAuto = "Off";
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(CameraAravisConfig::AbstractParamDescriptionConstPtr(new CameraAravisConfig::ParamDescription<std::string>("GainAuto", "str", 0, "Automatic gain", "{'enum_description': 'Automatic Settings', 'enum': [{'srcline': 14, 'description': 'Use Manual Settings', 'srcfile': '/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg', 'cconsttype': 'const char * const', 'value': 'Off', 'ctype': 'std::string', 'type': 'str', 'name': 'Off_'}, {'srcline': 15, 'description': 'Recalc Once', 'srcfile': '/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg', 'cconsttype': 'const char * const', 'value': 'Once', 'ctype': 'std::string', 'type': 'str', 'name': 'Once'}, {'srcline': 16, 'description': 'Recalc Continually', 'srcfile': '/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg', 'cconsttype': 'const char * const', 'value': 'Continuous', 'ctype': 'std::string', 'type': 'str', 'name': 'Continuous'}]}", &CameraAravisConfig::GainAuto)));
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(CameraAravisConfig::AbstractParamDescriptionConstPtr(new CameraAravisConfig::ParamDescription<std::string>("GainAuto", "str", 0, "Automatic gain", "{'enum_description': 'Automatic Settings', 'enum': [{'srcline': 14, 'description': 'Use Manual Settings', 'srcfile': '/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg', 'cconsttype': 'const char * const', 'value': 'Off', 'ctype': 'std::string', 'type': 'str', 'name': 'Off_'}, {'srcline': 15, 'description': 'Recalc Once', 'srcfile': '/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg', 'cconsttype': 'const char * const', 'value': 'Once', 'ctype': 'std::string', 'type': 'str', 'name': 'Once'}, {'srcline': 16, 'description': 'Recalc Continually', 'srcfile': '/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg', 'cconsttype': 'const char * const', 'value': 'Continuous', 'ctype': 'std::string', 'type': 'str', 'name': 'Continuous'}]}", &CameraAravisConfig::GainAuto)));
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.ExposureTimeAbs = 0.0;
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.ExposureTimeAbs = 1000000.0;
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.ExposureTimeAbs = 2000.0;
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(CameraAravisConfig::AbstractParamDescriptionConstPtr(new CameraAravisConfig::ParamDescription<double>("ExposureTimeAbs", "double", 0, "Exposure time (us)", "", &CameraAravisConfig::ExposureTimeAbs)));
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(CameraAravisConfig::AbstractParamDescriptionConstPtr(new CameraAravisConfig::ParamDescription<double>("ExposureTimeAbs", "double", 0, "Exposure time (us)", "", &CameraAravisConfig::ExposureTimeAbs)));
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.Gain = 0.0;
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.Gain = 10000.0;
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.Gain = 1.0;
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(CameraAravisConfig::AbstractParamDescriptionConstPtr(new CameraAravisConfig::ParamDescription<double>("Gain", "double", 0, "Gain (%)", "", &CameraAravisConfig::Gain)));
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(CameraAravisConfig::AbstractParamDescriptionConstPtr(new CameraAravisConfig::ParamDescription<double>("Gain", "double", 0, "Gain (%)", "", &CameraAravisConfig::Gain)));
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.AcquisitionMode = "";
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.AcquisitionMode = "";
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.AcquisitionMode = "Continuous";
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(CameraAravisConfig::AbstractParamDescriptionConstPtr(new CameraAravisConfig::ParamDescription<std::string>("AcquisitionMode", "str", 0, "Acquisition Mode", "{'enum_description': 'AcquisitionMode', 'enum': [{'srcline': 18, 'description': 'Capture continuously upon trigger.', 'srcfile': '/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg', 'cconsttype': 'const char * const', 'value': 'Continuous', 'ctype': 'std::string', 'type': 'str', 'name': 'Continuous_'}, {'srcline': 19, 'description': 'Capture one frame upon trigger.', 'srcfile': '/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg', 'cconsttype': 'const char * const', 'value': 'SingleFrame', 'ctype': 'std::string', 'type': 'str', 'name': 'SingleFrame'}, {'srcline': 20, 'description': 'Capture multiple frames upon trigger.', 'srcfile': '/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg', 'cconsttype': 'const char * const', 'value': 'MultiFrame', 'ctype': 'std::string', 'type': 'str', 'name': 'MultiFrame'}]}", &CameraAravisConfig::AcquisitionMode)));
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(CameraAravisConfig::AbstractParamDescriptionConstPtr(new CameraAravisConfig::ParamDescription<std::string>("AcquisitionMode", "str", 0, "Acquisition Mode", "{'enum_description': 'AcquisitionMode', 'enum': [{'srcline': 18, 'description': 'Capture continuously upon trigger.', 'srcfile': '/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg', 'cconsttype': 'const char * const', 'value': 'Continuous', 'ctype': 'std::string', 'type': 'str', 'name': 'Continuous_'}, {'srcline': 19, 'description': 'Capture one frame upon trigger.', 'srcfile': '/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg', 'cconsttype': 'const char * const', 'value': 'SingleFrame', 'ctype': 'std::string', 'type': 'str', 'name': 'SingleFrame'}, {'srcline': 20, 'description': 'Capture multiple frames upon trigger.', 'srcfile': '/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg', 'cconsttype': 'const char * const', 'value': 'MultiFrame', 'ctype': 'std::string', 'type': 'str', 'name': 'MultiFrame'}]}", &CameraAravisConfig::AcquisitionMode)));
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.AcquisitionFrameRate = 0.0;
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.AcquisitionFrameRate = 1000.0;
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.AcquisitionFrameRate = 100.0;
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(CameraAravisConfig::AbstractParamDescriptionConstPtr(new CameraAravisConfig::ParamDescription<double>("AcquisitionFrameRate", "double", 0, "Framerate (fps)", "", &CameraAravisConfig::AcquisitionFrameRate)));
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(CameraAravisConfig::AbstractParamDescriptionConstPtr(new CameraAravisConfig::ParamDescription<double>("AcquisitionFrameRate", "double", 0, "Framerate (fps)", "", &CameraAravisConfig::AcquisitionFrameRate)));
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.TriggerMode = "";
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.TriggerMode = "";
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.TriggerMode = "Off";
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(CameraAravisConfig::AbstractParamDescriptionConstPtr(new CameraAravisConfig::ParamDescription<std::string>("TriggerMode", "str", 0, "TriggerMode", "{'enum_description': 'On or Off', 'enum': [{'srcline': 11, 'description': 'Off', 'srcfile': '/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg', 'cconsttype': 'const char * const', 'value': 'Off', 'ctype': 'std::string', 'type': 'str', 'name': 'Off'}, {'srcline': 12, 'description': 'On', 'srcfile': '/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg', 'cconsttype': 'const char * const', 'value': 'On', 'ctype': 'std::string', 'type': 'str', 'name': 'On'}]}", &CameraAravisConfig::TriggerMode)));
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(CameraAravisConfig::AbstractParamDescriptionConstPtr(new CameraAravisConfig::ParamDescription<std::string>("TriggerMode", "str", 0, "TriggerMode", "{'enum_description': 'On or Off', 'enum': [{'srcline': 11, 'description': 'Off', 'srcfile': '/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg', 'cconsttype': 'const char * const', 'value': 'Off', 'ctype': 'std::string', 'type': 'str', 'name': 'Off'}, {'srcline': 12, 'description': 'On', 'srcfile': '/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg', 'cconsttype': 'const char * const', 'value': 'On', 'ctype': 'std::string', 'type': 'str', 'name': 'On'}]}", &CameraAravisConfig::TriggerMode)));
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.TriggerSource = "";
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.TriggerSource = "";
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.TriggerSource = "Line1";
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(CameraAravisConfig::AbstractParamDescriptionConstPtr(new CameraAravisConfig::ParamDescription<std::string>("TriggerSource", "str", 0, "Trigger Source", "{'enum_description': 'TriggerSource', 'enum': [{'srcline': 22, 'description': 'FrameStart triggered via software', 'srcfile': '/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg', 'cconsttype': 'const char * const', 'value': 'Software', 'ctype': 'std::string', 'type': 'str', 'name': 'Software'}, {'srcline': 23, 'description': 'FrameStart triggered via hardware input 1', 'srcfile': '/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg', 'cconsttype': 'const char * const', 'value': 'Line1', 'ctype': 'std::string', 'type': 'str', 'name': 'Line1'}, {'srcline': 24, 'description': 'FrameStart triggered via hardware input 2', 'srcfile': '/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg', 'cconsttype': 'const char * const', 'value': 'Line2', 'ctype': 'std::string', 'type': 'str', 'name': 'Line2'}]}", &CameraAravisConfig::TriggerSource)));
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(CameraAravisConfig::AbstractParamDescriptionConstPtr(new CameraAravisConfig::ParamDescription<std::string>("TriggerSource", "str", 0, "Trigger Source", "{'enum_description': 'TriggerSource', 'enum': [{'srcline': 22, 'description': 'FrameStart triggered via software', 'srcfile': '/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg', 'cconsttype': 'const char * const', 'value': 'Software', 'ctype': 'std::string', 'type': 'str', 'name': 'Software'}, {'srcline': 23, 'description': 'FrameStart triggered via hardware input 1', 'srcfile': '/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg', 'cconsttype': 'const char * const', 'value': 'Line1', 'ctype': 'std::string', 'type': 'str', 'name': 'Line1'}, {'srcline': 24, 'description': 'FrameStart triggered via hardware input 2', 'srcfile': '/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg', 'cconsttype': 'const char * const', 'value': 'Line2', 'ctype': 'std::string', 'type': 'str', 'name': 'Line2'}]}", &CameraAravisConfig::TriggerSource)));
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.softwaretriggerrate = 0.01;
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.softwaretriggerrate = 200.0;
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.softwaretriggerrate = 100.0;
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(CameraAravisConfig::AbstractParamDescriptionConstPtr(new CameraAravisConfig::ParamDescription<double>("softwaretriggerrate", "double", 0, "Software Trigger Rate (hz)", "", &CameraAravisConfig::softwaretriggerrate)));
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(CameraAravisConfig::AbstractParamDescriptionConstPtr(new CameraAravisConfig::ParamDescription<double>("softwaretriggerrate", "double", 0, "Software Trigger Rate (hz)", "", &CameraAravisConfig::softwaretriggerrate)));
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.FocusPos = 0;
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.FocusPos = 65535;
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.FocusPos = 32767;
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(CameraAravisConfig::AbstractParamDescriptionConstPtr(new CameraAravisConfig::ParamDescription<int>("FocusPos", "int", 0, "FocusPos", "", &CameraAravisConfig::FocusPos)));
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(CameraAravisConfig::AbstractParamDescriptionConstPtr(new CameraAravisConfig::ParamDescription<int>("FocusPos", "int", 0, "FocusPos", "", &CameraAravisConfig::FocusPos)));
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.frame_id = "";
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.frame_id = "";
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.frame_id = "camera";
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(CameraAravisConfig::AbstractParamDescriptionConstPtr(new CameraAravisConfig::ParamDescription<std::string>("frame_id", "str", 0, "ROS camera frame", "", &CameraAravisConfig::frame_id)));
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(CameraAravisConfig::AbstractParamDescriptionConstPtr(new CameraAravisConfig::ParamDescription<std::string>("frame_id", "str", 0, "ROS camera frame", "", &CameraAravisConfig::frame_id)));
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.mtu = 576;
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.mtu = 9000;
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.mtu = 1500;
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(CameraAravisConfig::AbstractParamDescriptionConstPtr(new CameraAravisConfig::ParamDescription<int>("mtu", "int", 0, "mtu", "", &CameraAravisConfig::mtu)));
//#line 274 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(CameraAravisConfig::AbstractParamDescriptionConstPtr(new CameraAravisConfig::ParamDescription<int>("mtu", "int", 0, "mtu", "", &CameraAravisConfig::mtu)));
//#line 246 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.convertParams();
//#line 246 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __group_descriptions__.push_back(CameraAravisConfig::AbstractGroupDescriptionConstPtr(new CameraAravisConfig::GroupDescription<CameraAravisConfig::DEFAULT, CameraAravisConfig>(Default)));
//#line 366 "/opt/ros/melodic/share/dynamic_reconfigure/templates/ConfigType.h.template"

      for (std::vector<CameraAravisConfig::AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        __description_message__.groups.push_back(**i);
      }
      __max__.__toMessage__(__description_message__.max, __param_descriptions__, __group_descriptions__);
      __min__.__toMessage__(__description_message__.min, __param_descriptions__, __group_descriptions__);
      __default__.__toMessage__(__description_message__.dflt, __param_descriptions__, __group_descriptions__);
    }
    std::vector<CameraAravisConfig::AbstractParamDescriptionConstPtr> __param_descriptions__;
    std::vector<CameraAravisConfig::AbstractGroupDescriptionConstPtr> __group_descriptions__;
    CameraAravisConfig __max__;
    CameraAravisConfig __min__;
    CameraAravisConfig __default__;
    dynamic_reconfigure::ConfigDescription __description_message__;

    static const CameraAravisConfigStatics *get_instance()
    {
      // Split this off in a separate function because I know that
      // instance will get initialized the first time get_instance is
      // called, and I am guaranteeing that get_instance gets called at
      // most once.
      static CameraAravisConfigStatics instance;
      return &instance;
    }
  };

  inline const dynamic_reconfigure::ConfigDescription &CameraAravisConfig::__getDescriptionMessage__()
  {
    return __get_statics__()->__description_message__;
  }

  inline const CameraAravisConfig &CameraAravisConfig::__getDefault__()
  {
    return __get_statics__()->__default__;
  }

  inline const CameraAravisConfig &CameraAravisConfig::__getMax__()
  {
    return __get_statics__()->__max__;
  }

  inline const CameraAravisConfig &CameraAravisConfig::__getMin__()
  {
    return __get_statics__()->__min__;
  }

  inline const std::vector<CameraAravisConfig::AbstractParamDescriptionConstPtr> &CameraAravisConfig::__getParamDescriptions__()
  {
    return __get_statics__()->__param_descriptions__;
  }

  inline const std::vector<CameraAravisConfig::AbstractGroupDescriptionConstPtr> &CameraAravisConfig::__getGroupDescriptions__()
  {
    return __get_statics__()->__group_descriptions__;
  }

  inline const CameraAravisConfigStatics *CameraAravisConfig::__get_statics__()
  {
    const static CameraAravisConfigStatics *statics;

    if (statics) // Common case
      return statics;

    boost::mutex::scoped_lock lock(dynamic_reconfigure::__init_mutex__);

    if (statics) // In case we lost a race.
      return statics;

    statics = CameraAravisConfigStatics::get_instance();

    return statics;
  }

//#line 11 "/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg"
      const char * const CameraAravis_Off = "Off";
//#line 12 "/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg"
      const char * const CameraAravis_On = "On";
//#line 14 "/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg"
      const char * const CameraAravis_Off_ = "Off";
//#line 15 "/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg"
      const char * const CameraAravis_Once = "Once";
//#line 16 "/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg"
      const char * const CameraAravis_Continuous = "Continuous";
//#line 18 "/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg"
      const char * const CameraAravis_Continuous_ = "Continuous";
//#line 19 "/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg"
      const char * const CameraAravis_SingleFrame = "SingleFrame";
//#line 20 "/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg"
      const char * const CameraAravis_MultiFrame = "MultiFrame";
//#line 22 "/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg"
      const char * const CameraAravis_Software = "Software";
//#line 23 "/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg"
      const char * const CameraAravis_Line1 = "Line1";
//#line 24 "/home/jmg/talos/src/camera_aravis/cfg/CameraAravisConfig.cfg"
      const char * const CameraAravis_Line2 = "Line2";
}

#undef DYNAMIC_RECONFIGURE_FINAL

#endif // __CAMERAARAVISRECONFIGURATOR_H__
